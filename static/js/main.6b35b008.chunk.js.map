{"version":3,"sources":["data/constans/budget.constans.js","data/context/budget.context.js","components/ToggleableList/ToggleableList.js","index.css.js","pages/Budget/Budget.css.js","pages/Budget/Budget.js","App.js","serviceWorker.js","data/reducers/budget.reducer.js","data/reducers/index.js","index.js","data/store.js","components/Wrapper/Wrapper.js","components/Navigation/Navigation.css.js","components/Button/Button.css.js","components/Button/Button.js","components/Navigation/Navigation.js","components/LoadingIndicator/LoadingIndicator.js","components/Modal/Modal.css.js","components/Modal/Modal.js","components/DetailsModal/DetailsModal.js","components/SuspenseErrorBundary/SuspenseErrorBundary.js"],"names":["SET_SELECTED_CATEGORY_ID","SET_TRANSACTION_DETAILS_ID","initialValue","store","React","createContext","Provider","reducer","state","action","type","selectedCategoryId","payload","BudgetContext","BudgetProvider","children","useReducer","dispatch","value","Item","memo","item","onClickHandler","isActive","Trigger","onClick","items","clickRef","useState","selectedItem","setSelectedItem","useEffect","current","map","key","id","GlobalStyle","createGlobalStyle","normalize","Grid","styled","div","BudgetTransactionList","lazy","BudgetCategoryList","AddTransactionView","ShowTransactionDetails","connect","selectedTransactionId","budget","showTransaction","setShowTransaction","to","variant","path","transaction","App","fallback","content","RightElement","exact","Boolean","window","location","hostname","match","initialState","undefined","rootReducer","combineReducers","preloadedState","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","config","shared","suspense","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","Wrapper","Container","NavigationWrapper","List","ul","RootButton","button","props","InlineButton","RegularButton","Button","Component","useMemo","component","Navigation","circle","keyframes","LoadingIndicator","aside","Content","CloseIcon","Modal","history","useHistory","handleCloseClick","goBack","createPortal","e","stopPropagation","querySelector","DetailsModal","SuspenseErrorBundary","tryAgain","a","setState","hasError","errorInfo","log","Suspense","this","Fragment"],"mappings":"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","file":"static/js/main.6b35b008.chunk.js","sourcesContent":["export const SET_SELECTED_CATEGORY_ID = 'SET_SELECTED_CATEGORY_ID';\r\n\r\nexport const SET_TRANSACTION_DETAILS_ID = 'SET_TRANSACTION_DETAILS_ID';","import React, { useReducer } from 'react';\r\n\r\nconst initialValue = {};\r\nconst store = React.createContext(initialValue);\r\nconst { Provider } = store;\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'selectParentCategoryId':\r\n            return {\r\n                ...state,\r\n                selectedCategoryId: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction BudgetProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, initialValue)\r\n\r\n    return (\r\n        <Provider value={{\r\n            state,\r\n            dispatch,\r\n        }}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst BudgetContext = {\r\n    store,\r\n    BudgetProvider,\r\n};\r\n\r\nexport default BudgetContext;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Item = React.memo(({ item, onClickHandler, isActive }) =>\r\n    (\r\n        <div>\r\n            <item.Trigger onClick={onClickHandler} />\r\n            {isActive && item.children}\r\n        </div>))\r\n\r\n\r\nfunction ToggleableList({ items, clickRef }) {\r\n    const [selectedItem, setSelectedItem] = useState();\r\n\r\n    useEffect(() => {\r\n        clickRef.current = setSelectedItem;\r\n    }, [clickRef, setSelectedItem])\r\n\r\n\r\n    return (\r\n        <>\r\n            {items.map(item => {\r\n                return (\r\n                    <Item\r\n                        key={item.id}\r\n                        item={item}\r\n                        onClickHandler={setSelectedItem}\r\n                        isActive={selectedItem === item.id}\r\n                    />\r\n                )\r\n            }\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ToggleableList);","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  li + li {\n    margin-left: 10px\n  }\n}\n`\nexport default GlobalStyle;","import styled from 'styled-components';\r\n\r\nexport const Grid = styled.div`\r\ndisplay: flex;\r\n\r\nsection:nth-child(1) {\r\nflex:4;\r\n}\r\n\r\nsection:nth-child(2) {\r\nflex:8;\r\n}\r\n`","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from './Budget.css';\r\nimport { Button, LoadingIndicator, Modal, DetailsModal, SuspenseErrorBundary } from 'components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport BudgetContext from 'data/context/budget.context'\r\nconst BudgetTransactionList = React.lazy(() => import('pages/Budget/components/BudgetTransactionList'));\r\nconst BudgetCategoryList = React.lazy(() => import('pages/Budget/components/BudgetCategoryList'))\r\nconst AddTransactionView = React.lazy(() => import('pages/Budget/components/AddTransactionForm'))\r\nconst ShowTransactionDetails = React.lazy(() => import('./components/ShowTransactionDetails/ShowTransactionDetails'))\r\n\r\nfunction Budget({ selectedTransactionId }) {\r\n    // useEffect(() => {\r\n    //     // fetchBudgetedCategories(1)\r\n    //     // fetchBudget(1)\r\n    //     // fetchAllCategories()\r\n    // }, [fetchBudget, fetchBudgetedCategories, fetchAllCategories]);\r\n\r\n    // const isLoaded = useMemo(() => (!!commonState && Object.keys(commonState).length === 0) && (!!budgetState && Object.keys(budgetState).length === 0),\r\n    //     [commonState, budgetState]\r\n    // );\r\n    const [showTransaction, setShowTransaction] = useState()\r\n\r\n\r\n\r\n    return (\r\n        <BudgetContext.BudgetProvider >\r\n            <Grid>\r\n                <section>\r\n                    <SuspenseErrorBundary>\r\n                        <BudgetCategoryList />\r\n                    </SuspenseErrorBundary>\r\n                </section>\r\n                <section>\r\n                    <SuspenseErrorBundary>\r\n                        <Button to=\"/budget/transactions/new\" variant=\"regular\" >Add new transaction</Button>\r\n                        <Button variant=\"regular\" onClick={() => setShowTransaction(!showTransaction)} >{showTransaction ? 'Hide transactions' : 'Show transaction'}</Button>\r\n                        {showTransaction && <BudgetTransactionList />}\r\n\r\n                    </SuspenseErrorBundary>\r\n                </section>\r\n            </Grid>\r\n\r\n            <Switch>\r\n                <Route path=\"/budget/transactions/new\">\r\n                    <Modal>\r\n                        <AddTransactionView />\r\n                    </Modal>\r\n                </Route>\r\n                <Route path=\"/budget/transactions/details\">\r\n                    <DetailsModal>\r\n                        <ShowTransactionDetails\r\n                            transaction={selectedTransactionId}\r\n                        />\r\n                    </DetailsModal>\r\n                </Route>\r\n            </Switch>\r\n        </BudgetContext.BudgetProvider>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {\r\n        selectedTransactionId: state.budget.selectedTransactionId,\r\n    }\r\n}\r\n)(Budget)\r\n\r\n","import React, { Suspense } from 'react';\r\nimport './index.css';\r\nimport GlobalStyle from 'index.css'\r\nimport { Navigation, Wrapper, LoadingIndicator, Button } from 'components'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Budget from './pages/Budget'\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <Suspense fallback=\"Loading..\">\r\n      <GlobalStyle />\r\n      <Router>\r\n        <Navigation\r\n          items={\r\n            [\r\n              { content: \"HomePage\", to: \"/\" },\r\n              { content: \"BudgetPage\", to: \"/budget\" }\r\n            ]}\r\n          RightElement={(\r\n            <div>\r\n              <Button variant=\"regular\" >pl</Button>\r\n              {/* <Button variant=\"regular\">en</Button> */}\r\n            </div>\r\n          )}\r\n        />\r\n        <Wrapper>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              HomePage\r\n          </Route>\r\n            <Route path=\"/budget\">\r\n              <Budget />\r\n            </Route>\r\n          </Switch>\r\n        </Wrapper>\r\n      </Router>\r\n\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SET_SELECTED_CATEGORY_ID,\r\n    SET_TRANSACTION_DETAILS_ID,\r\n} from 'data/constans'\r\n\r\n\r\nconst initialState = {\r\n    selectedCategoryId: undefined,\r\n    selectedTransactionId: [],\r\n}\r\n\r\nfunction budget(state = initialState, action) {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_SELECTED_CATEGORY_ID:\r\n            return {\r\n                ...state,\r\n                selectedCategoryId: action.payload,\r\n            }\r\n        case SET_TRANSACTION_DETAILS_ID:\r\n            return {\r\n                ...state,\r\n                selectedTransactionId:\r\n                    action.payload,\r\n\r\n\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default budget;\r\n","import { combineReducers } from 'redux';\r\nimport budget from './budget.reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    budget,\r\n\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css.js';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './data/store'\r\nimport { ReactQueryConfigProvider } from 'react-query'\r\n\r\n\r\nconst store = configureStore();\r\n\r\nconst queryConfig = {\r\n  shared: {\r\n    suspense: true,\r\n  },\r\n}\r\n\r\nReactDOM.render(\r\n  <ReactQueryConfigProvider config={queryConfig}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ReactQueryConfigProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n","import { applyMiddleware, createStore } from 'redux'\r\n//import thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [\r\n\r\n    ];\r\n    const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n    const enhancers = [middlewareEnhancer]\r\n    const composedEnhancers = composeWithDevTools(...enhancers)\r\n\r\n    const store = createStore(rootReducer, preloadedState, composedEnhancers)\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }\r\n\r\n    return store;\r\n}","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\nwidth:100%;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nmax-width: 960px;\r\npadding-left: 10px;\r\npadding-right: 10px;\r\n`\r\nexport default Wrapper;","import styled from 'styled-components'\r\nimport Wrapper from '../Wrapper'\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #4b0082;\r\ndisplay: flex;\r\npadding: 15px;\r\njustify-content: space-between;\r\n`;\r\n\r\nexport const NavigationWrapper = styled(Wrapper)`\r\ndisplay: flex;\r\njustify-content: space-between\r\n`\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\n`","import styled from 'styled-components';\r\n\r\nexport const RootButton = styled.button`\r\ncolor: #E6E6FA;\r\ncursor: inherit;\r\nborder: none;\r\nbackground-color: transparent;\r\ncursor: ${props => props.to || props.onClick || props.type === 'submit' ? 'pointer' : 'default'};\r\n\r\n&:hover {\r\n    background:#E6E6FA;\r\n    color :black;\r\n    border-radius: 10px;\r\n}\r\n`;\r\n\r\nexport const InlineButton = styled(RootButton)`\r\n&:hover {\r\n    \r\n}\r\n`\r\n\r\nexport const RegularButton = styled(RootButton)`\r\nbackground: #FF6666;\r\ncolor: white;\r\nborder-radius: 3px;\r\nmargin: 13px;\r\nmargin-top: 5px;\r\n`","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { InlineButton, RegularButton } from './Button.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ variant, children, ...props }) {\r\n    const { to } = { ...props };\r\n    const Component = useMemo(() => {\r\n        switch (variant) {\r\n            case 'inline':\r\n                return InlineButton;\r\n            case 'regular':\r\n                return RegularButton;\r\n            default:\r\n                return 'regular';\r\n        }\r\n    }, [variant]);\r\n\r\n    const component = useMemo(() => (\r\n        <Component {...props}>\r\n            {children}\r\n        </Component>\r\n    ), [props, children])\r\n\r\n    return to ? (\r\n        <Link {...props} >\r\n            {component}\r\n        </Link>\r\n\r\n    ) :\r\n        <>\r\n            {component}\r\n        </>\r\n}\r\n\r\nButton.propTypes = {\r\n    variant: PropTypes.oneOf(['regular', 'inline'])\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { List, Container } from './Navigation.css'\r\nimport { NavigationWrapper } from './Navigation.css'\r\nimport Button from '../Button/Button'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction Navigation({ items = [], RightElement }) {\r\n    return (\r\n        <Container>\r\n            <NavigationWrapper>\r\n                <List>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <li key={item.to}>\r\n                                <Button variant=\"inline\" to={item.to}>\r\n                                    {item.content}\r\n                                </Button>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </List>\r\n                {RightElement}\r\n            </NavigationWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNavigation.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst circle = keyframes`\r\n0 % {\r\n    opacity: 1;\r\n    backface- visibility: hidden;\r\ntransform: translateZ(0) scale(1.5,1.5);\r\n} 100% {\r\nopacity: 0;\r\nbackface-visibility: hidden;\r\ntransform: translateZ(0) scale(1,1);\r\n}\r\n`\r\n\r\nconst Root = styled.div`\r\n.ldio-l5qu7awpkb div > div {\r\n    position: absolute;\r\nwidth: 24px;\r\nheight: 24px;\r\nborder-radius: 50%;\r\nbackground:black;\r\nanimation: ${circle} 1s linear infinite;\r\n}.ldio-l5qu7awpkb div:nth-child(1) > div {\r\n    left: 148px;\r\ntop: 88px;\r\nanimation-delay: -0.875s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(1) {\r\n    transform: rotate(0deg);\r\ntransform-origin: 160px 100px;\r\n}.ldio-l5qu7awpkb div:nth-child(2) > div {\r\n    left: 130px;\r\ntop: 130px;\r\nanimation-delay: -0.75s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(2) {\r\n    transform: rotate(45deg);\r\ntransform-origin: 142px 142px;\r\n}.ldio-l5qu7awpkb div:nth-child(3) > div {\r\n    left: 88px;\r\ntop: 148px;\r\nanimation-delay: -0.625s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(3) {\r\n    transform: rotate(90deg);\r\ntransform-origin: 100px 160px;\r\n}.ldio-l5qu7awpkb div:nth-child(4) > div {\r\n    left: 46px;\r\ntop: 130px;\r\nanimation-delay: -0.5s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(4) {\r\n    transform: rotate(135deg);\r\ntransform-origin: 58px 142px;\r\n}.ldio-l5qu7awpkb div:nth-child(5) > div {\r\n    left: 28px;\r\ntop: 88px;\r\nanimation-delay: -0.375s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(5) {\r\n    transform: rotate(180deg);\r\ntransform-origin: 40px 100px;\r\n}.ldio-l5qu7awpkb div:nth-child(6) > div {\r\n    left: 46px;\r\ntop: 46px;\r\nanimation-delay: -0.25s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(6) {\r\n    transform: rotate(225deg);\r\ntransform-origin: 58px 58px;\r\n}.ldio-l5qu7awpkb div:nth-child(7) > div {\r\n    left: 88px;\r\ntop: 28px;\r\nanimation-delay: -0.125s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(7) {\r\n    transform: rotate(270deg);\r\ntransform-origin: 100px 40px;\r\n}.ldio-l5qu7awpkb div:nth-child(8) > div {\r\n    left: 130px;\r\ntop: 46px;\r\nanimation-delay: 0s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(8) {\r\n    transform: rotate(315deg);\r\ntransform-origin: 142px 58px;\r\n}\r\n.loadingio-spinner-spin-obbqbqd8oh {\r\n    width: 200px;\r\nheight: 200px;\r\ndisplay: inline-block;\r\noverflow: hidden;\r\nbackground: #ffffff;\r\n}\r\n.ldio-l5qu7awpkb {\r\n    width: 100%;\r\nheight: 100%;\r\nposition: relative;\r\ntransform: translateZ(0) scale(1);\r\nbackface-visibility: hidden;\r\ntransform-origin: 0 0; /* see note above */\r\n}\r\n.ldio-l5qu7awpkb div {box - sizing: content-box; }\r\n`\r\n\r\n\r\nfunction LoadingIndicator() {\r\n    return (\r\n        <Root></Root>\r\n\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator;\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\nbackground-color: rgba(0,0,0,0.5);\r\nposition: fixed;\r\nheight: 100%;\r\nwidth:100%;\r\ntop: 0;\r\nleft: 0;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nz-index: 100;\r\n`;\r\n\r\nexport const Content = styled.div`\r\nbackground: #fff;\r\nposition: absolute;\r\nmargin: auto;\r\nwidth: 350px;\r\nheight: 280px;\r\nbox-shadow:  gray;\r\npadding: 20px;\r\ntext-align: center;\r\n`;\r\n\r\nexport const CloseIcon = styled.div`\r\nposition: absolute;\r\nright: 7px;\r\ntop: 5px;\r\ncursor: pointer;\r\nfont-size: 20px;\r\n`;","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Wrapper, Content, CloseIcon } from './Modal.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Modal({ children }) {\r\n    let history = useHistory();\r\n    const handleCloseClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return createPortal(\r\n        <Wrapper onClick={handleCloseClick}>\r\n            <Content onClick={e => e.stopPropagation()}>\r\n                <CloseIcon onClick={handleCloseClick}>X</CloseIcon>\r\n                {children}\r\n            </Content>\r\n        </Wrapper>\r\n        , document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Content, CloseIcon, Wrapper } from '../Modal/Modal.css';\r\nimport { createPortal } from 'react-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction DetailsModal({ children }) {\r\n    let history = useHistory();\r\n    const handleCloseClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return createPortal(\r\n        <Wrapper onClick={handleCloseClick}>\r\n            <Content onClick={e => e.stopPropagation()}>\r\n                <CloseIcon onClick={handleCloseClick}>X</CloseIcon>\r\n                {children}\r\n            </Content>\r\n        </Wrapper>\r\n        , document.querySelector('#modal')\r\n    )\r\n}\r\nexport default DetailsModal;","import React from 'react';\r\nimport { Button } from 'components'\r\n\r\n\r\n\r\nclass SuspenseErrorBundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        console.log(error, errorInfo);\r\n    }\r\n\r\n    tryAgain = async () => {\r\n        this.setState({\r\n            hasError: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Suspense fallback=\"Loading...\">\r\n                {this.state.hasError ? (\r\n                    <div>\r\n                        Error\r\n                        {/* Error <Button variant='regular' onClick={this.tryAgain}>Try again!</Button> */}\r\n                    </div>\r\n\r\n                ) : (\r\n                        <React.Fragment>\r\n                            {this.props.children}\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SuspenseErrorBundary;"],"sourceRoot":""}